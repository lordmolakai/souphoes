{
  "nothingFound": "Nothing found",
  "timestamp": "Timestamp",
  "asset": "Asset",
  "sender": "Sender",
  "receiver": "Receiver",
  "protocolFee": "Protocol Fee",
  "name": "Name",
  "signatures": "Signatures",
  "walletApprove": "Confirm this transaction in your wallet",
  "max": "Max",
  "recommended": "Recommended",
  "approve": {
    "btnText": "Approve",
    "approveTitle": "Approve {{token}} token",
    "approveText": "Please specify the amount you want to unlock:",
    "permanently": "Permanently",
    "thisTime": "This time only",
    "custom": "Custom",
    "amountPlaceholder": "{{token}} to approve",
    "submitText": "Approve custom amount",
    "errors": {
      "failed": "Unknown error occurred. Approve failed.",
      "toLowAmount": "You should approve at least {{amount}} to initiate this trade"
    },
    "minApproveAmount": "At least {{amount}} for this trade",
    "twoStep": {
      "info": "To change allowance you would need to send two transactions",
      "text": "Certain tokens require several transactions to change allowance.<br> First you would need to reset allowance to zero, and only then set new allowance value.",
      "btnText": "Proceed with two step approve"
    }
  },
  "claim": "Claim",
  "header": {
    "nav": {
      "bridge": "Bridge",
      "explorer": "Explorer",
      "faucet": "Faucet",
      "docs": "Docs",
      "liquidityPools": "Liquidity Pools",
      "help": "Help",
      "solutions": "Solutions",
      "launchApp": "LAUNCH deAPPS",
      "dev": "Developers",
      "devAPI": "Integrate decentralized cross-chain swaps between arbitrary assets into any applications (web apps, wallets, dApps) in just a few lines of code",
      "devDocs": "Get started building cross-chain applications and primitives on top of the deBridge generic messaging protocol",
      "blog": "Blog",
      "products": "Products",
      "explorerDesc": "View transactions, usage metrics, and technical info for deBridge",
      "launchSwap": "LAUNCH deSWAP",
      "widgetDesc": "Offer seamless cross-chain swaps in any application with our customizable widget",
      "deSwapDesc": "Swap any assets across chains in one transaction",
      "dePortDesc": "Deploy any token to any supported chain, fully backed by your native asset",
      "deNFTFactoryDesc": "Create secure cross-chain NFTs that can live anywhere",
      "deNFTBridgeDesc": "Bridge your NFTs to any supported chain, securely.",
      "deDocsDesc": "Start your cross-chain build smoothly with our developer documentation",
      "apiDesc": "Enable seamless cross-chain swaps in your app or protocol with our battle-tested API",
      "sdkDesc": "Send, track and claim arbitrary cross-chain messages using a framework-agnostic SDK",
      "hardhatDesc": "A Hardhat plugin to test and emulate integrations with deBridge",
      "overview": "Overview",
      "overviewText": "Browse solutions for all types of secure cross-chain applications",
      "gettingStarted": "Getting started",
      "gettingStartedText": "Start your build today using our developer docs, tools, and resources",
      "applications": "Applications",
      "dlnDesc": "High performance cross-chain native trading for advanced users"
    }
  },
  "theme": {
    "light": "Light",
    "dark": "Dark"
  },
  "account": {
    "wallet": "Wallet",
    "balance": "Balance",
    "network": "Network",
    "history": "Transaction history",
    "disconnect": "Disconnect",
    "changeNetwork": "Change network",
    "changeNetworkTo": "Change your network to",
    "connectWallet": "Connect wallet",
    "connectWalletType": "Connect {{type}} wallet",
    "chooseWallet": "Choose Wallet",
    "chooseNetwork": "Choose Network",
    "howToConnect": "Learn how to connect",
    "acceptanceText": {
      "read": "I accept the",
      "terms": "Terms of Service",
      "and": "and",
      "privacy": "Privacy Policy"
    },
    "chain": "Chain",
    "unsupportedChain": "Your wallet doesn't support this chain",
    "mustBeInstalled": "{{wallet}} must be installed",
    "install1InchWallet": "Please install 1Inch Wallet",
    "walletNotSupportChain": "Current wallet does not support the selected chain. Please connect another wallet.",
    "pleaseConnectWallet": "Please connect wallet",
    "wrongAccount": "The requested account has not been authorized by the user"
  },
  "transaction": {
    "statusTitle": "Status",
    "status": {
      "pending": "pending",
      "confirmed": "Confirmed",
      "executed": "Executed",
      "awaitingConfirmation": "Awaiting confirmation",
      "awaitingTransConfirmation": "Awaiting transaction confirmation",
      "awaitingDeBridgeConfirmation": "Awaiting deBridge confirmation",
      "awaitingExecution": "Awaiting execution",
      "broadcasted": "Transaction broadcasted",
      "awaitingDeployment": "Awaiting deployment of the smart contract",
      "failed": "Transaction failed",
      "orderCreated": "Order created",
      "orderFulfilled": "Order fulfilled",
      "orderFulfilledAndUnlocking": "Fulfilled And Unlocking",
      "orderFulfilledAndUnlocked": "Fulfilled And Unlocked",
      "orderCanceling": "Order canceling",
      "orderCancelled": "Order cancelled"
    },
    "msg": {
      "confirmed": "Transaction was confirmed",
      "canBeClaimed": "Once there are enough confirmations from oracles,<br/> it can be claimed in the target blockchain",
      "claimConfirm": "Please confirm the transaction in your wallet in order to have it executed in the target chain",
      "pleaseClaim": "Please claim your transaction",
      "pleaseClaimStatus": "Please claim transaction",
      "pleaseDeployStatus": "Please deploy token",
      "initFee": "Bridge fee initialization",
      "signatures": "Signing a Message",
      "claim": "Claim",
      "deploy": "Deploy"
    },
    "readyForClaim": "Ready for claiming by keeper",
    "validatorsConfirmation": "Validators confirmation",
    "openInExplorer": "Check transaction progress in deBridge Explorer",
    "allTitle": "Transactions",
    "detailsTitle": "Transaction details",
    "awaitingTitle": "Awaiting transaction",
    "submittedTitle": "Transaction submitted",
    "blockConfirmations": "Block confirmations",
    "longExecutionMessage": "Taking longer than usual",
    "longExecutionTooltip": "Execution of transaction is taking longer than usual as the specified included gas is too low. Please connect wallet and claim transaction manually in the target chain",
    "needDeploy": "Need to deploy wrapped token",
    "deployBtn": "Deploy token",
    "chainFrom": "Chain from",
    "chainTo": "Chain to",
    "originTxId": "Origin txid",
    "claimTxId": "Claim txid",
    "submissionId": "Submission id",
    "submissionIdTooltip": "Submission id is a unique identifier of a cross-chain transaction in the deBridge protocol",
    "tokenToReceive": "Token to receive",
    "addToMetamask": "Add to Metamask",
    "addToMetamaskTooltip": "Switch chain to add token to Metamask",
    "amountSent": "Amount sent",
    "amountReceived": "Amount received",
    "callDataTooltip": "Call data to be executed in the target blockchain",
    "fallbackAddress": "Fallback address",
    "nonce": "Nonce",
    "nonceTooltip": "The unique number of the transaction in the deBridge smart contract",
    "flags": "Flags",
    "deBridgeConfirmations": "deBridge confirmations",
    "waitingConfirmation": "Waiting for confirmation",
    "fallbackAddressTooltip": "In case execution of call data fails, all tokens will be transferred to the fallback address",
    "pleaseDeployTitle": "Please deploy the wrapped asset smart contract",
    "pleaseDeployTooltip": "Token contract should be deployed only once the token has been transferred for the first time into this blockchain",
    "claim": {
      "awaitingByKeeper": "Awaiting execution by keepers (please wait)",
      "awaitingByKeeperTooltip": "Transaction should be claimed by keepers shortly, please wait 1 minute or claim it manually. Manual claim may fail if keepers claim it earlier",
      "lowIncludedGasTooltip": "Specified included gas is less than the recommended amount and may not cover gas costs of keepers to claim it. You may need to execute it manually"
    },
    "deploy": {
      "awaitingByKeeper": "Awaiting deployment by keepers (please wait)",
      "awaitingByKeeperTooltip": "Transaction should be deployed by keepers shortly, please wait 1 minute or deploy it manually. Manual deployment may fail in case keepers deploy token earlier",
      "awaitingDeployment": "Awaiting deployment",
      "lowIncludedGasTooltip": "Specified included gas is less than the recommended amount and may not cover gas costs of keepers to deploy it. You may need to deploy it manually"
    },
    "longExecutionTooltipDeploy": "Execution of transaction takes longer than usual as specified included fee was too low. Please connect wallet and deploy token manually in the target chain",
    "orOpenIn": "or in {{explorer}}",
    "checkTxIn": "Check transaction in {{explorer}}",
    "awaitingNblockConfirmations": "Awaiting {{n}} block confirmations",
    "transferredMessage": "Transferred message",
    "nftInfo": "NFT info",
    "transactionInfo": "Transaction info",
    "type": "Type",
    "slippage": "Slippage",
    "callDataText": "Call data",
    "callDataMarker": "Receiver marker",
    "callDataTooltipText": "Learn how to construct complex cross-chain interactions <a>here</a>",
    "callDataMarkerTooltip": "This market is automatically replaced by address of receiver",
    "externalCallFail": "External call failed",
    "failedPerSlippage": "Failed per slippage",
    "externalCallFailTooltip": {
      "p1": "The transaction was reverted in the destination chain and the user received the intermediary asset.",
      "p2Link": "Click here",
      "p2Text": "to swap it into any desired asset"
    },
    "waitingWrapTokens": "Waiting for wrap tokens",
    "waitingCreateBridge": "Waiting for create bridge",
    "steps": {
      "send": "Send",
      "wrap": "Wrap",
      "claim": "Claim",
      "deploy": "Deploy",
      "create_wallet": "Create wallet",
      "wrap_tokens": "Wrap tokens",
      "signatures": "Signatures",
      "create_bridge": "Create bridge",
      "init_bridge_fee": "Init bridge fee",
      "init_external_call": "Init external call",
      "execute_external_call": "Execute external call",
      "init_accounts": "Init accounts"
    },
    "deSwapInfo": {
      "title": "deSwap Info",
      "tokenFrom": "Token From",
      "tokenTo": "Token To",
      "sentAmount": "Sent Amount"
    },
    "messageSender": "Message sender",
    "messageReceiver": "Message receiver",
    "minReceivedAmount": "Min Received Amount",
    "callData": "Call data execution",
    "bundleGasLimit": "Bundle gas limit",
    "bundleGasLimitTooltip": "Provide the expected amount of gas required to execute the given bundle of transactions",
    "tokenAddressMarker": "Output token marker",
    "tokenAddressMarkerTooltip": "This market is automatically replaced by address of the receiving token",
    "tokenAmountMarker": "Output token Amount marker",
    "tokenAmountMarkerTooltip": "All occurrences of the marker in the call data will be automatically replaced by the output token Amount",
    "adapterAddress": "Called smart contract address",
    "adapterAddressTooltip": "This address to be called by DNL executor contract with specified call data",
    "openInOrders": "Check order status in deExplorer",
    "flagTooltip": "Flags allow customizing the transaction execution on the destination chain.",
    "deExplorerTooltip": "This transaction initiated a message through the deBridge infrastructure",
    "awaitingFulfillment": "Awaiting fulfillment"
  },
  "bridge": {
    "title": "Bridge Asset",
    "sendFrom": "Send from",
    "sendTo": "Send to",
    "bridgeTo": "Bridge {{input}} to {{output}}",
    "confirmTransfer": "Confirm Transfer",
    "tokenSupportMsg": "deBridge doesn't support non-standard assets such as rebasing tokens with an elastic supply or tokens with embedded transfer fees",
    "errors": {
      "lowTransferredAmount": "Transferred amount is too low",
      "lowBalanceForFee": "Your balance should cover the protocol fee of",
      "amountLessThanFee": "The transferred amount should be higher than the sum of included gas and protocol fees",
      "notEnoughBalance": "Not enough balance",
      "notEnoughBalanceTooltip": "The specified amount exceeds your wallet balance",
      "priceCantBeDetermined": "The price of this token can't be determined. Transaction is unlikely to be claimed by keepers and you will need to claim it manually through explorer.\n",
      "notEnoughBalanceTooltipInPool": "Maximal amount of each cross-chain transaction is temporarily limited to $200,000. For larger amounts, please split your order into multiple transactions",
      "notEnoughBalanceInPool": "The amount should be less than $200,000",
      "SDK1ichError": {
        "text": "Routing for this token can’t be found. Make sure the specified token is liquid or send a message to our",
        "btn": "support chat"
      },
      "lowIncludedGas": "Specified included gas is low. You may need to claim transaction manually",
      "includedGasUpdated": "Recommended included gas has been updated. Please click the \"Recommended\" button to update the value",
      "recommendedGasFeeCantBeDetermined": "The recommended included gas can't be determined. The transaction is unlikely to be claimed by keepers and you will need to claim it manually through the explorer.",
      "maxAmountError": "{{symbol}} balance is too low to cover gas",
      "DLNUnknownError": "Routing for this asset cannot be found. Try making a same-chain swap into USDC first or reach out to us on <a>Discord</a> to investigate.",
      "notEnoughBalanceForTrade": "You should have at least <span>{{amount}} {{tokenSymbol}}</span> on your balance to perform this trade",
      "routingNotFound": "Routing for this asset cannot be found."
    },
    "checkTransfer": "Check your transfer",
    "previewTransfer": "Preview transfer",
    "routing": "Routing",
    "tooltipAbout": "Transfer any arbitrary asset through the deBridge infrastructure to receive wrapped (deAsset) on all other chains",
    "updateRouting": "Refresh for updated exchange rate",
    "warnings": {
      "needUpdateRouting": "This exchange rate may be outdated. Please refresh for new rate",
      "highSlippage": "High slippage! More than 10% negative impact",
      "highIncludedGas": "Make sure you accept the specified included gas",
      "highSlippageLowAmount": "High slippage because tx amount is too low and included gas takes {{value}}% of the transferred amount",
      "needUpdateRoutingAndNetwork": "This exchange rate may be outdated. Please change network for an updated quote",
      "highOrderSlippage": "Tokens with low liquidity may experience significant price impact and reduced outcome. Trades across chains between a single asset (e.g. USDC) have zero price impact, regardless of order size.",
      "toHighReward": "The specified market order quote is more than 5% higher than the current market rate. <br>Are you sure you want to proceed?",
      "highOrderSwap": "Your trade will be executed shortly, but you can cancel at any time before execution. For a faster trade, split into multiple orders of ${{amount}}.",
      "prohibitLimitOrder": "We temporarily prohibit creating limit orders that have a price impact of more than 50%"
    },
    "description": "Deploy any token to any supported chain",
    "from": "From",
    "to": "To",
    "confirmOrderCreation": "Create trade",
    "orderSlippage": "You will receive the buy price or better, so you do not need to set a slippage tolerance. Cross-chain trades between a single asset (e.g. USDC) have zero price impact, regardless of your order size.",
    "checkTransaction": "Check transaction parameters",
    "confirmUpdatedPrice": "Confirm updated market price",
    "transactionSettings": "Transaction settings",
    "reducedSpread": "Reduced spread",
    "reducedSpreadTooltip": "Spreads are reduced as market makers are incentivized in OP tokens. <a>Learn more</a>",
    "costsRebate": "Costs Rebate",
    "costsRebateTooltip": "Included gas is reduced because operational expenses are rebated to market makers. <a>Learn more</a>",
    "feesRebate": "Fees Rebate",
    "feesRebateTooltip": "DLN fees will be rebated in OP tokens to your Optimism wallet within 2 weeks. <a>Learn more</a>",
    "forRebate": "For Rebate"
  },
  "transfer": {
    "toggleLabel": "Bridge and Transfer",
    "addressPlaceholder": "Recipient's {{value}} Address",
    "errors": {
      "notValidAddress": "Please enter a valid address",
      "contractEnteredTitle": "The recipient address you entered is a smart contract.",
      "contractEnteredText": "Except in rare situations, you probably shouldn't send to a smart contract.  <b>You could lose your assets or they might go to the wrong place.</b> Make a transfer into the wallet you control or double-check the address with the recipient",
      "ensNotFound": "The ens address you entered is not found.",
      "contractEnteredATATitle": "The recipient address you entered is an ATA address.",
      "needToGetPermission": "You need to get permission first",
      "failedCalcTransferFee": "Included gas couldn't be estimated.<br> You will have to claim the cross-chain message manually from the UI."
    },
    "summary": {
      "sending": "Sending",
      "receiving": "Receiving"
    },
    "notices": {
      "utility": "Be aware that the wrapped token may not have any utility in the target chain and make sure you know why you're bridging the asset",
      "swap": "In case execution of the swap in the destination chain does not satisfy the specified slippage you will receive {{token}} to your wallet and you will be able to swap it manually through {{curveLink}}",
      "sdk-swap": "If the transaction in the destination chain does not satisfy the slippage requirement and fails, you will receive at least {{intermediary}} {{token}} to {{address}} address. You can change {{token}} through {{app}}",
      "lowBalanceForFee": "Please reduce the transaction amount or make sure the wallet has enough balance to cover gas costs",
      "orderPreSwap": "{{inputAmount}} {{inputSymbol}} will be Pre-swapped into {{changeAmount}} {{changeSymbol}} to minimize volatility risks for takers. The change left after the pre-swap will be returned back to your address"
    },
    "placeholderENS": "or ENS",
    "toAddressLabel": "Swap and Transfer",
    "changeAddress": "Change address",
    "claimModalTitle": "Claim cross-chain message",
    "deployModalTitle": "Deploy cross-chain message"
  },
  "tokenApprove": {
    "pendingApproval": "Pending Approval",
    "pendingConfirmation": "Pending Confirmation",
    "dlgText": "Your approval is needed to unlock <span class='text-transform-none'>{{token}}</span><br> for your upcoming transaction"
  },
  "tokenSelect": {
    "modalTitle": "Select a token",
    "searchPlaceholder": "Search by name or paste address",
    "nativeTooltip": "Native chain of the token",
    "nothingFound": "Nothing found. Try to search by smart contract address",
    "searchChainPlaceholder": "Search by chain name",
    "searchPlaceholderBuy": "Select a token to buy",
    "searchPlaceholderSell": "Select a token to sell"
  },
  "event": {
    "pageTitle": "Events",
    "eventTitle": "Event",
    "locationTitle": "Location",
    "scheduleBtn": "Schedule meeting",
    "upcomingTitle": "Meet deBridge at upcoming conferences"
  },
  "wrongNetwork": {
    "p1": "App network ({{appNetwork}}) <br> doesn't match to network selected in wallet",
    "p2": {
      "learn": "Learn how to",
      "link": "change network in wallet",
      "or": "or"
    },
    "currentNetwork": "{{walletNetworkTitle}} with id: {{walletNetwork}}"
  },
  "alert": {
    "confirmPrevRequest": "Confirm the previous request in the wallet",
    "metamaskNotInstalled": "MetaMask must be installed",
    "unsupportedNetwork": "Unsupported chain with chainId {{id}}",
    "firstTransfer": {
      "title": "This token is bridged to the destination chain for the first time",
      "text": "Very first transfer consumes more gas to initialize the bridge for the asset. Recommended included gas is also higher than usual in order to cover gas costs of token deployment in the destination chain. please note that the deBridge default bridge doesn't support bridging of non-standard assets with an elastic supply or tokens with embedded transfer fees"
    },
    "contractPaused": "deBridge smart contract was paused by governance in the destination chain. We're working on the solution. Track all updates in our {{discord}} and {{twitter}}",
    "errorOccurred": "Unknown error occurred. Please reach out to us in {{link}}",
    "web3ErrorInit": "Web3 initialization error. The app will be reload",
    "walletConflict": "Some of your wallets may conflict with each other. Make sure you have only one enabled to avoid conflicts",
    "oneInchNotInstalled": "1inch wallet must be installed",
    "loginWallet": "Please log in to {{wallet}} and refresh the page.",
    "loginWalletWithoutName": "Please log in to wallet",
    "1inchWalletSelectCurrentChain": "Please select current chain at your wallet",
    "gnosisSelectCurrentChain": "Please select current chain in Gnosis",
    "longTokenUri": "The NFT you are about to bridge includes an array of metadata which is larger than an average NFT's metadata size. This may lead to a higher-than-expected transfer cost to the Ethereum blockchain. Proceed with caution.",
    "veryLongTokenUri": "The NFT you are about to bridge includes an extremely large array of metadata, which may cause an inability to finish the transfer on the destination chain or transfer it back due to gas limits per block constraints defined on several blockchains. We do not recommend initiating the transfer of this NFT."
  },
  "notice": {
    "scheduledMaintenance": "deBridge explorer is temporarily unavailable due to scheduled maintenance. We will be back online shortly",
    "betaSoftware": {
      "beforeLink": "The protocol has passed several independent",
      "link": "security audits",
      "afterLink": ", but it's important to know that this is <span class='text-primary'>Mainnet Beta</span> and it must be used at your own risk"
    },
    "clearCache": "The application was updated. Click \"Update\" to reset the cache and use the latest version."
  },
  "footer": {
    "text": "Commenced during Chainlink Hackathon, 2021",
    "hiring": "We are hiring!",
    "brandAssets": "Brand Assets",
    "terms": "Terms of Service",
    "privacy": "Privacy Policy"
  },
  "decimals": "Decimals",
  "accessCode": {
    "enterCode": "Enter invite code",
    "codePlaceholder": "Invite code",
    "join": "Join",
    "dln": {
      "step1Text": "Please enter the invite code you have received from the deBridge team. This code provides early access to DLN for partners and validators, please don't share it with anyone.",
      "step2Text": "Please connect your wallet and enter the invite code you have received from the deBridge team. This code provides early access to DLN for partners and validators, please don't share it with anyone.",
      "connectWhitelisted": "Connect your whitelisted wallet or enter an invite code"
    }
  },
  "token": {
    "nativeChainTitle": "Token native chain:",
    "nativeChainTooltip": "is native chain of the token",
    "nativeTokenAddress": "Native Token Address",
    "nativeChain": "Native chain",
    "name": "Token name",
    "symbol": "Token symbol",
    "image": "Image",
    "title": "Token",
    "address": "Token address",
    "id": "Token ID",
    "viewInfo": "View token info",
    "contractAddress": "Contract Address",
    "baseUri": "Image URI",
    "metadataFailed": "Token metadata couldn't be determined"
  },
  "yes": "Yes",
  "no": "No",
  "settings": {
    "settingsTitle": "Settings",
    "settingsText": "You can customize the default transaction settings for all future transactions",
    "gasPrice": "Gas Price",
    "enableExchanges": "Enable Exchanges",
    "language": "Interface Language",
    "manageTokenList": "Manage Token List",
    "custom": "Custom",
    "slippageTolerance": "Slippage Tolerance",
    "normal": "Normal",
    "fast": "Fast",
    "instant": "Instant",
    "enableEip": "Enable EIP1559 Compatibility",
    "reset": "Reset to Default",
    "txSpeed": {
      "title": "Transaction speed",
      "low": "Low",
      "medium": "Medium",
      "high": "High",
      "custom": "Custom",
      "toLowSlippage": "Specified slippage tolerance should be more than {{min}}%"
    },
    "maxPriorityFee": "Max priority fee",
    "maxFee": "Max fee",
    "maxFeeTooltip": "The max fee is the highest gas price that can be applied to your transaction. It's the sum of the base fee and priority fee.",
    "maxPriorityFeeTooltip": "This fee goes directly to miners as an incentive to prioritize your transaction.",
    "save": "Save",
    "maxPriorityFeeError": "Max fee cannot be lower than max priority fee",
    "estimatedTime": "Estimated time",
    "additionalTakerReward": "Additional incentive for Market Maker",
    "additionalTakerRewardTooltip": "An additional incentive for Market Maker to fulfill your order faster"
  },
  "executionFeeTable": {
    "claimCost": "Claim cost",
    "gasPrice": "Chain gas price",
    "recommendFee": "Recommended fee",
    "tokenPrice": "Token price",
    "tokenDeployCost": "Token deploy cost"
  },
  "protocolFeeTooltip": "The protocol takes a small fee for each cross-chain transfer. <a>Learn more</a> about protocol fees",
  "copied": "Copied",
  "invitation": {
    "title": "Generate Invitation Link",
    "crossChainText": "Invitation link generator is a cross-chain application built on top of the deBridge infrastructure which sends transactions into a smart contract in Polygon which assigns a unique invitation code to your wallet, so you can share it with friends.",
    "contactInteractionText": "Invitation link generator is a cross-chain application built on top of the deBridge infrastructure which sends a transaction into a smart contract in Polygon that assigns a unique invitation code to your wallet, so you can share it with friends.",
    "messageFee": "Cross-chain Message Fee",
    "transactionNotice": "The transaction to generate an invitation link can be sent from any supported blockchain, so pick the chain where you can afford the gas price",
    "share": "Share referral link",
    "inviteFriends": "Invite friends",
    "generate": "Generate"
  },
  "readMore": "Read more",
  "min": "Min",
  "node": {
    "settingsTitle": "Nodes settings",
    "lastTimestamp": "Last block timestamp",
    "placeholder": "Node url",
    "syncError": {
      "title": "Node is not fully synced",
      "text": {
        "one": "{{chains}} RPC is not fully synced. Please wait or replace {{chains}}'s node RPC with another one",
        "other": "{{chains}} RPC are not fully synced. Please wait or replace {{chains}}'s nodes RPC with another one"
      },
      "link": "here"
    }
  },
  "swap": {
    "tooltipAbout": "Decentralized cross-chain swaps between arbitrary assets in a single transaction",
    "title": "Swap Asset",
    "description": "Swap any tokens across chains"
  },
  "nft": {
    "bridge": "Bridge NFT",
    "chainIdTo": "Chain ID to",
    "symbol": "Symbol",
    "myNFTs": "My NFTs",
    "tokenNetwork": "Token's network",
    "owner": "Owner",
    "sendTo": "Send to",
    "locked": "Locked",
    "lockedTooltip": "Token was locked on NFT Bridge",
    "name": "NFT name",
    "gallery": "NFT Gallery",
    "createNFTCollection": "Create NFT collection",
    "searchPlaceholder": "Search by Name / Symbol / Token address / ID",
    "searchCollectionPlaceholder": "Search by Name / Symbol / Token address",
    "seeNFTFactoryCollection": "See My <i>de</i>NFT Factory Collections",
    "seeNFTCollection": "See My Collections",
    "mint": "Mint",
    "myCollections": "My Collections",
    "createCollection": "Create collection",
    "chooseNftType": "Choose NFT type",
    "single": "Single",
    "singleTypeDesc": "Choose this one if you want to create a unique NFT which has only one copy",
    "multiple": "Multiple",
    "multipleTypeDesc": "Choose this one if you want to create several copies of the same NFT",
    "collectionName": "Collection name",
    "collectionSymbol": "Collection Symbol",
    "collectionAddress": "Contract Address",
    "collectionCover": "Collection cover",
    "connectWalletToCreate": "Connect Wallet to start creating",
    "createNewCollection": "Create new collection",
    "pickCollection": "Pick existing collection",
    "uploadCollectionCover": "Upload collection cover",
    "uploadNFTsTitle": "Drag&drop files here or upload from your computer. You can drop multiple files if you want to create more than 1 NFT.",
    "orPickCollection": "Or pick another collection",
    "uploadedProgress": "Uploaded {{index}} of {{count}} files...",
    "uploadToIPFS": "Upload images to IPFS",
    "mintToAddress": "Mint to another address",
    "mintCollection": "Mint Collection",
    "dataSentIPFS": "Data is being sent to IPFS cc.",
    "convertIntoCrossChain": "Convert into cross-chain native",
    "convertCollectionIntoCrossChain": "Convert collection into cross-chain native",
    "watIsCrossChainNative": "What is cross-chain native?",
    "converting": "Converting",
    "convert": "Convert",
    "addMoreToCollection": "add more nft<i>s</i> to this collection",
    "viewMyCollection": "View my collection",
    "convertSuccessTitle": "Your collection is now cross-chain native!",
    "convertSuccessText": "You can burn on one chain and mint on the other to ensure you always have only one copy of the NFT",
    "convertText": {
      "p1": "By making the collection cross-chain native, you are passing the minting rights to the deBridge contract. You will still be the creator and the owner of the collection but won't be able to make changes to the collection.",
      "p2": "When bridged, a cross-chain native NFT will be burned on the native chain and minted on the destination chain. The NFT will only exist on one chain at all times."
    },
    "amountOfNFTs": "Amount of NFTs",
    "NFTStandard": "NFT Standard",
    "pickNFT": "Choose NFT to bridge",
    "chooseNFT": "Choose NFT",
    "errors": {
      "notOwner": "Send to other chains allow only for owner"
    },
    "notFound": "No items found. Add items or switch to another network.",
    "addToCollection": "Add NFTs to collection",
    "pasteNTFdata": "Paste NTFs data",
    "mintSuccess": "NFTs have been minted",
    "deNFTBridge": "<i>de</i>NFT Bridge",
    "easilyTransfer": "Easily transfer your NFTs across chains",
    "deNftFactory": "deNFT Factory",
    "deNftFactoryDesc": "Create and manage cross-chain native NFT collections",
    "bridgeDiffNft": "Bridge a different NFT",
    "crossChainNative": "Cross-chain native"
  },
  "share": {
    "p1": "You just performed your first cross-chain transfer.",
    "p2": "If you like the product, please share your experience with friends.",
    "on": "Share on",
    "message": "I've just performed my first cross-chain swap through @debridgeFinance and it was amazing.",
    "dlnModalFirstOrder": "Boom. Congrats on making your first cross-chain trade! If you thought it rocked, tell the world.",
    "dlnShareFirstOrder": "I just made my first high performance trade across chains with @DLN_Trade. I #TradeWithSuperpowers."
  },
  "referral": {
    "pageTitle": "Referral Statistic",
    "invitedFriends": "Invited friends",
    "totalFeesForCode": "Total fees for referral code",
    "totalFeesForWallet": "Total fees for wallet",
    "yourReferralCode": "Your referral code",
    "inviteCode": "Invite Code",
    "statLink": "Referral statistic",
    "transactionsMade": "Transactions made",
    "totalFees": "Total Fees",
    "affiliateFee": "Affiliate fee percent",
    "affiliateFeeAddress": "Affiliate fee address",
    "program": "Referral",
    "referralCodeTooltip": "Generate your referral code by clicking the WAGMI button at <a>https://app.debridge.finance/</a>. Governance may thank you later for being an early builder",
    "affiliateFeeTooltip": "Percentage of each transaction that will be transferred to your affiliate fee address",
    "affiliateFeeAddressTooltip": "Affiliate fee recipient address",
    "referralCode": "Referral code",
    "referralLink": "Referral link",
    "fees": "Fees",
    "trades": "Trades",
    "totalUsers": "Total users",
    "tradeVolume": "Trade volume",
    "totalTxs": "Total txs",
    "rewards": "Rewards",
    "generateLinkActionText": "Generate your referral link so you can invite others to join {{app}}",
    "connectToSee": "Please connect your wallet to see your referral statistics",
    "connectEvmToSee": "Please connect EVM wallet to see your stats or generate a referral link",
    "invitedTooltip": "User who made a first transaction in DLN by your referral link.",
    "messagesSent": "Messages sent"
  },
  "includedGas": "Included gas",
  "includedGasTooltip": "\"Included gas\" is a reward you suggest to keepers for the execution of the transaction in the destination chain.",
  "recommendedIsOk": "Recommended value is set",
  "permit": {
    "btnText": "Give permission",
    "signMessage": "Please sign this permit to let smart contract spend \"{{amount}}\" <br> from your wallet address",
    "titleWaiting": "Sign permit"
  },
  "confirmInWallet": "Confirm transaction in your wallet",
  "widget": {
    "pageTitle": "deSwap Widget",
    "installation": "Installation",
    "errors": "There are some errors, please correct them above",
    "exportSettings": "Export settings",
    "importSettings": "Import settings",
    "invalidSettings": "Invalid settings",
    "form": {
      "supportedChains": "Supported сhains",
      "allChains": "All chains",
      "chainsPlaceholder": "Select chain",
      "tokensPlaceholder": "Select token",
      "chainID": "Chain ID",
      "supportedTokens": "Supported tokens",
      "allTokens": "All tokens",
      "defaultChain": "Default chain",
      "defaultAddress": "Default address",
      "defaultToken": "Default token",
      "tokenAddress": "Token Address",
      "language": "Language",
      "theme": "Theme",
      "width": "Width",
      "height": "Height",
      "element": "Element",
      "elementTooltip": "ID of the html element where the widget will be embedded",
      "amount": "Default amount",
      "showRecipientAddress": "Enable transfer to custom address",
      "recipientAddress": "Recipient Address",
      "updateBtn": "Update widget",
      "code": "Embed code",
      "title": "Title",
      "onTransactionBundling": "Enable Call data",
      "hideLogo": "Hide logo",
      "chainTokenList": "{{chain}} token list",
      "notModifiable": "Not modifiable",
      "notModifiableAmountTooltip": "This tick should be enabled if users shouldn't be able to modify this amount",
      "disabledAmountTooltip": "The amount field is locked because you fixed value for the buy or sell amount\n",
      "logoURI": "Logo URI"
    },
    "style": {
      "groupTitle": "Style",
      "styleTooltip": "This section explains how to customize each attribute of the widget with your own theme.",
      "openStyleScheme": "Open color scheme",
      "general": "General",
      "pallet": "Pallet",
      "form": "Form",
      "buttons": "Buttons",
      "typography": "Typography",
      "appBackground": "Background",
      "appAccentBg": "Accent Background",
      "chartBg": "Chart",
      "primary": "Primary",
      "secondary": "Secondary",
      "badge": "Badge",
      "textColor": "Primary text",
      "accentText": "Accent text",
      "fontFamily": "Font family",
      "selectFont": "Select font",
      "fontTooltip": "Choose your font on",
      "borderColor": "Border color",
      "formControlBg": "Input background",
      "dropdownBg": "Dropdown background",
      "borderRadius": "Border Radius",
      "iconColor": "Icons",
      "error": "Error",
      "success": "Success",
      "warning": "Warning",
      "tooltipBg": "Tooltip",
      "primaryBtnBg": "Primary background",
      "primaryBtnText": "Primary button text",
      "secondaryBtnBg": "Secondary background",
      "secondaryBtnText": "Secondary button text",
      "inheritTooltip": "The button background is inherited from the palette"
    }
  },
  "selectItems": {
    "placeholder": "Select item",
    "all": "All items",
    "selectAll": "Select All"
  },
  "create": "Create",
  "sendToAnotherAddress": "Send to Another Address",
  "clickToBridge": "Click to Bridge",
  "erc1155NotSupported": "ERC1155 not yet supported",
  "add": "Add",
  "applyToAll": "apply to all",
  "quantity": "Quantity",
  "properties": "Properties",
  "optional": "optional",
  "preview": "Preview",
  "chain": "Chain",
  "type": "Type",
  "chooseBlockchain": "Choose blockchain",
  "step": "Step",
  "soon": "Soon",
  "upload": "Upload",
  "creating": "Creating",
  "address": "Address",
  "readDocs": "Read the docs",
  "error": "Error",
  "validation": {
    "required": "Required field",
    "addressNotValid": "Address is not valid",
    "fillFields": "Please fill out required fields",
    "bundleNotValid": "Enter valid transaction bundle",
    "enterValue": "Please, enter a value",
    "addressNotResolved": "Address is not resolved",
    "imageUrlNotValid": "Image URI is not valid"
  },
  "apply": "Apply",
  "cancel": "Cancel",
  "successfully": "Successfully",
  "back": "Back",
  "example": "Example",
  "description": "Description",
  "beneficiaryAddress": "Beneficiary address",
  "order": {
    "allTitle": "Orders",
    "detailsTitle": "deSwap Order",
    "awaitingTitle": "Awaiting order",
    "sendCancel": "Send Cancel",
    "sendUnlock": "Send Unlock",
    "cancel": "Cancel",
    "fulfill": "Fulfill",
    "fulfillOrder": "Fulfill Order",
    "unlock": "Unlock",
    "status": {
      "Created": "Created",
      "Fulfilled": "Fulfilled",
      "SentUnlock": "Fulfilled And Unlocking",
      "ClaimedUnlock": "Fulfilled And Unlocked",
      "SentOrderCancel": "Canceling",
      "OrderCancelled": "Canceling",
      "Canceling": "Canceling",
      "Cancelled": "Cancelled",
      "ClaimedOrderCancel": "Cancelled"
    },
    "id": "Order ID",
    "checkStatus": "Check order status in <i>de</i>Explorer",
    "takerReward": "Market maker reward",
    "rewardPercentDLNTooltip": "You can increase the incentive for Market Maker to fulfill your order by reducing the “Buy amount”",
    "rewardPercentTooltip": {
      "text": "You can increase the incentive for your order to be fulfilled faster by adding an additional incentive in",
      "link": "Settings"
    },
    "exchange": "You're creating a limit order that will be fulfilled when price of",
    "timestamp": "Creation time",
    "creationTx": "Creation tx",
    "authorityInSrcChain": "Order authority in source chain",
    "authorityInSrcChainTooltip": "The address that can modify the order to increase the taker reward",
    "allowedMarketMaker": "Allowed market maker",
    "fulfillTxid": "Fulfill tx",
    "taker": "Taker",
    "fulfillTimestamp": "Fulfillment time",
    "takerUnlockBeneficiary": "Taker unlock beneficiary",
    "unlockTx": "Unlock message",
    "orderAuthorityInDstChain": "Order authority in destination chain",
    "orderAuthorityInDstChainTooltip": "The address which can cancel the order or modify it to increase the taker reward",
    "cancelTimestamp": "Cancel time",
    "cancelBeneficiary": "Cancel beneficiary",
    "orderCreatorNonce": "Order creator nonce",
    "maker": "Maker",
    "cancelDesc": "Send cross-chain message to {{chainFrom}} to cancel order. Set cancel BENEFICIARY who will receive full refund.",
    "unlockDesc": "Send cross-chain message to {{chainFrom}} to unlock liquidity from order. Set BENEFICIARY who will receive {{amount}} {{symbol}}",
    "cancelTxid": "Cancel txid",
    "message": "DLN message",
    "sendBatchUnlock": "Send Batch Unlock",
    "orderTypeTooltip": "Modify the price to set a limit order",
    "orderTypeLimit": "Limit order",
    "orderTypeMarket": "Market",
    "cancelTx": "Cancel message",
    "checkOrder": "Check your <i>de</i>Swap trade",
    "takerAction": "Taker action",
    "makerAction": "Maker action",
    "allowedCancelBeneficiary": "Allowed Cancel Beneficiary",
    "cancelSubmissionId": "Cancel Submission ID",
    "unlockTime": "Unlock time",
    "unlockSubmissionId": "Unlock submission id",
    "cancelClaimTx": "Cancel Claim Tx",
    "cancelClaimTime": "Cancel Claim Time",
    "unlockClaimTx": "Unlock Claim Tx",
    "unlockClaimTime": "Unlock Claim Time",
    "orderRemovedFromBatchUnlock": "Order {{orderId}} is not in the Fulfill state and has been removed from the batch unlocking process. <br>The number of unlock orders has decreased to {{newOrdersCount}}",
    "errors": {
      "unlockFailed": "Unlock failed",
      "cancelFailed": "Cancel failed",
      "fulfillFailed": "Fulfill Failed",
      "orderIsNotProfitable": "The recommended market price has changed.",
      "creationFailed": "Unknown error occurred. Order creation failed.",
      "cancelExcallFailed": "Cancel external calldata failed"
    },
    "warnings": {
      "toHighTakerReward": "The specified reward for Takers is too high.<br> Reduce the price of the trade or adjust the incentive in the settings",
      "highSlippageLowAmount": "High slippage, trade amount is low and included gas is {{value}}% of the transferred amount"
    },
    "myOrders": "My orders",
    "checkFulfill": "Check order parameters for fulfillment",
    "fulfillAmount": "Amount to fulfill",
    "unlockAmount": "Amount to unlock",
    "formSubtitle": "Trade any assets across chains with zero slippage",
    "actualAsset": "Actual order asset",
    "gasExpenses": "Taker gas expenses",
    "gasExpensesTooltip": "Included gas is paid on top of the amount and covers takers' gas costs to fulfill your trade",
    "includingGasExpenses": "Including Taker gas expenses",
    "unlockAuthorityDst": "Unlock authority in destination chain",
    "dlnTermsSign": "By using deSwap dApp the I accept the <a>Terms of Service</a> and <a>Privacy Policy</a>"
  },
  "affiliateFee": "Affiliate fee",
  "receiverAddress": "Receiver address",
  "assetFrom": "Asset from",
  "assetTo": "Asset to",
  "currentChain": "Current chain",
  "support": "Support",
  "beneficiary": "Beneficiary",
  "noMatchingEntries": "There are no matching entries",
  "flags": {
    "UNWRAP_ETH": "Unwrap ETH",
    "REVERT_IF_EXTERNAL_FAIL": "Revert if external fail",
    "PROXY_WITH_SENDER": "Proxy with sender",
    "SEND_HASHED_DATA": "Send hashed data",
    "SEND_EXTERNAL_CALL_GAS_LIMIT": "Send external call gas limit",
    "MULTI_SEND": "Multi send"
  },
  "learnMore": "Learn more",
  "wallet": {
    "errors": {
      "connect_error": "Connect error",
      "need_connect": "Need connect",
      "wallet_not_found": "Wallet not found",
      "wallet_not_unswered": "Wallet not answered",
      "switch_network_manually": "Please switch network manually in {{wallet}}",
      "switch_network_manually_link": "<p>Please switch network manually in {{wallet}}</p><p><a href='{{link}}' target='_blank' class='link-underline external-link'>Learn more how to fix this issue</a></p>",
      "wallet_error_code": "Wallet error ({{code}})",
      "error_switch_network": "Network switch failed",
      "wallet_alreay_processing": "Wallet already processing",
      "not_support_chain": "Not support chain",
      "need_confirm_previous_request": "Need confirm previous request",
      "user_rejected": "User rejected",
      "not_found_contract": "Not found contract",
      "token_not_found": "Token not found",
      "timeout": "Transaction was not confirmed within 30 seconds",
      "transaction_expired": "Transaction expired, please send it again",
      "cant_change_chain": "Can't change chain",
      "unknown_chain": "Unknown chain",
      "rpc_node_unsync": "RPC Node unsync",
      "insufficient_funds": "There are not enough assets in the wallet",
      "transaction_was_not_mined_50_blocks": "Transaction was not mined within 50 blocks, please make sure your transaction was sent correctly. Be aware that the transaction might still be mined!",
      "signatures_not_save": "Failed to save signatures! Make sure you have the required number of signatures",
      "create_order_invalid_query_parameters": "Invalid query parameters",
      "create_order_source_and_destination_chains_are_equal": "Source and destination chains are equal",
      "create_order_included_gas_fee_not_covered_by_input_amount": "Included gas fee not covered by input amount",
      "create_order_included_gas_fee_cannot_be_estimated_for_transaction_bundle": "Included gas fee cannot be estimated for transaction bundle",
      "create_order_connector_1inch_returned_error": "Connector 1inch returned error",
      "create_order_internal_server_error": "Internal server error",
      "create_order_internal_sdk_error": "Internal SDK error",
      "create_order_error_low_give_amount": "Error low give amount",
      "unknown_error": "Unknown error occurred",
      "external_call_error": "External call error",
      "wallet_return_error": "Wallet returned error. Please try to update your wallet",
      "get_create_order_tx_error": "Transaction for this token can’t be found.",
      "create_order_affiliate_fee_recipient_not_set": "create_order_affiliate_fee_recipient_not_set.",
      "create_order_affiliate_fee_percent_not_set": "create_order_affiliate_fee_percent_not_set.",
      "create_order_estimation_failed": "Create order estimation failed.",
      "create_order_sender_address_empty": "Sender address is empty.",
      "create_order_unsupported_token_in": "Unsupported token in.",
      "create_order_unsupported_token_out": "Unsupported token out.",
      "create_order_unable_to_estimate_order_fulfillment": "Unable to estimate order fulfillment.",
      "create_order_huge_amount": "Please provide an give/take amount in USD that not exceeds 5 million USD in equivalent value."
    }
  },
  "scrollToSeeMore": "Scroll down to see more",
  "gas": "Gas",
  "warning": "Warning",
  "supportChat": "Support chat",
  "percentage": "Percentage",
  "activeFrom": "Active from",
  "generate": "Generate",
  "priceImpact": "Price impact",
  "application": {
    "errors": {
      "networkError": "Please check your network connection",
      "rpcError": "Please check your RPC settings"
    }
  },
  "exCall": {
    "title": "External call",
    "callData": "Call data",
    "atomic": "Atomic",
    "atomicTooltip": "The external call must be executed in the same transaction in which the order is fulfilled.",
    "requireSuccessfulExecution": "Require Successful execution",
    "requireSuccessfulExecutionTooltip": "If False, and execution fails the funds are sent to the fallback address. <br>If True, failed external call execution can be triggered again until successfully executed.",
    "takerReward": "Taker reward for execution",
    "takerRewardTooltip": "Taker reward for execution Tooltip",
    "notAllowedExecutor": "Not allowed ext-call executor",
    "notAllowedExecutorError": "This external call executor program is not permitted",
    "stepTx": {
      "Executed": "External call tx",
      "FailedToExecute": "External call failed tx",
      "Canceled": "External call cancellation tx"
    },
    "stepTime": {
      "Executed": "External call executed time",
      "FailedToExecute": "External call cancelled time",
      "Canceled": "External call failed time"
    },
    "status": {
      "NoExtCall": "No call",
      "AwaitingOrderFulfillment": "Awaiting order fulfillment",
      "AwaitingExecution": "Awaiting execution",
      "Executing": "Executing",
      "Completed": "Completed",
      "Failed": "Failed",
      "Cancelled": "Cancelled",
      "OrderCancelled": "Order cancelled"
    },
    "fallbackTooltip": "If the external call fails and successful execution is not required all funds will be transferred to fallback"
  },
  "explorer": {
    "orders": {
      "latest": "Latest trade",
      "filter": {
        "chains": "Chains",
        "role": "Role",
        "tradeStatus": "Trades status",
        "extCallStatus": "Ext call status"
      }
    }
  },
  "sec": "sec"
}
